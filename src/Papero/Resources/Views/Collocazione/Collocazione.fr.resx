<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Albero delle Collocazioni" xml:space="preserve">
    <value>Arborescence des Positions</value>
  </data>
  <data name="Annulla" xml:space="preserve">
    <value>Annuler</value>
  </data>
  <data name="Armadio" xml:space="preserve">
    <value>Armoire</value>
  </data>
  <data name="Cancella Armadio" xml:space="preserve">
    <value>Supprimer l'Armoire</value>
  </data>
  <data name="Cancella Cassetto" xml:space="preserve">
    <value>Supprimer le Tiroir</value>
  </data>
  <data name="Cancella Sala" xml:space="preserve">
    <value>Supprimer la Salle</value>
  </data>
  <data name="Cancella Vassoio" xml:space="preserve">
    <value>Supprimer le Plateau</value>
  </data>
  <data name="Cassetto" xml:space="preserve">
    <value>Tiroir</value>
  </data>
  <data name="Conferma Cancellazione Armadio" xml:space="preserve">
    <value>Confirmer la suppression de l'Armoire</value>
  </data>
  <data name="Conferma Cancellazione Cassetto" xml:space="preserve">
    <value>Confirmer la suppression du Tiroir</value>
  </data>
  <data name="Conferma Cancellazione Sala" xml:space="preserve">
    <value>Confirmer la suppression de la Salle</value>
  </data>
  <data name="Conferma Cancellazione Vassoio" xml:space="preserve">
    <value>Confirmer la suppression du Plateau</value>
  </data>
  <data name="Gestione Collocazioni" xml:space="preserve">
    <value>Gestion des Positions</value>
  </data>
  <data name="Inserisci" xml:space="preserve">
    <value>Appliquer</value>
  </data>
  <data name="Inserisci nuova Sala" xml:space="preserve">
    <value>Insérer la nouvelle Salle</value>
  </data>
  <data name="Inserisci nuovo Armadio" xml:space="preserve">
    <value>Insérer le nouveau Armoire</value>
  </data>
  <data name="Inserisci nuovo Cassetto" xml:space="preserve">
    <value>Insérer le nouveau Tiroir</value>
  </data>
  <data name="Inserisci nuovo Vassoio" xml:space="preserve">
    <value>Insérer le nouveau Plateau</value>
  </data>
  <data name="Modifica" xml:space="preserve">
    <value>Éditer</value>
  </data>
  <data name="Modifica Nome Armadio" xml:space="preserve">
    <value>Éditer le nom de l'Armoire</value>
  </data>
  <data name="Modifica Nome Cassetto" xml:space="preserve">
    <value>Éditer le nom du Tiroir</value>
  </data>
  <data name="Modifica Nome Sala" xml:space="preserve">
    <value>Éditer le nom de la Salle</value>
  </data>
  <data name="Modifica Nome Vassoio" xml:space="preserve">
    <value>Éditer le nom du Plateau</value>
  </data>
  <data name="Nome Armadio" xml:space="preserve">
    <value>Nom de l'Armoire</value>
  </data>
  <data name="Nome Cassetto" xml:space="preserve">
    <value>Nom du Tiroir</value>
  </data>
  <data name="Nome Sala" xml:space="preserve">
    <value>Nom de la Salle</value>
  </data>
  <data name="Nome Vassoio" xml:space="preserve">
    <value>Nom du Plateau</value>
  </data>
  <data name="Nuova Sala" xml:space="preserve">
    <value>Nouvelle Salle</value>
  </data>
  <data name="Nuovo Armadio" xml:space="preserve">
    <value>Nouveau Armoire</value>
  </data>
  <data name="Nuovo Cassetto" xml:space="preserve">
    <value>Nouveau Tiroir</value>
  </data>
  <data name="Nuovo Vassoio" xml:space="preserve">
    <value>Nouveau Plateau</value>
  </data>
  <data name="Sala" xml:space="preserve">
    <value>Salle</value>
  </data>
  <data name="Selezionare un elemento dell'albero" xml:space="preserve">
    <value>Sélectionner un élément de l'arborescence</value>
  </data>
  <data name="Vassoio" xml:space="preserve">
    <value>Plateau</value>
  </data>
</root>